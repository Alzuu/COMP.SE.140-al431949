name: "al431949"
version: "3.8"
services:
  service1:
    build: ./service1
    container_name: ${SERVICE1_HOST}
    expose:
      - ${SERVICE1_PORT}
    networks:
      - customNetwork
    environment:
      - TARGET_HOST=${SERVICE2_HOST}
      - TARGET_PORT=${SERVICE2_PORT}
      - MQ_HOST=${MQ_HOST}
      - MQ_PORT=${MQ_PORT}
      - MQ_EXCHANGE=${MQ_EXCHANGE}
      - MQ_LOG_ROUTING_KEY=${MQ_LOG_ROUTING_KEY}
      - MQ_MESSAGE_ROUTING_KEY=${MQ_MESSAGE_ROUTING_KEY}
      - MQ_STATE_QUEUE=${MQ_STATE_QUEUE}
      - MQ_STATE_SERVICE1_ROUTING_KEY=${MQ_STATE_SERVICE1_ROUTING_KEY}
      - PYTHONUNBUFFERED=1
    depends_on:
      - ${MQ_HOST}
    command:
      [
        "./utils/wait-for-it.sh",
        "${SERVICE2_HOST}:${SERVICE2_PORT}",
        "--",
        "python3",
        "-u",
        "app.py",
      ]

  service2:
    build: ./service2
    container_name: ${SERVICE2_HOST}
    expose:
      - ${SERVICE2_PORT}
    networks:
      - customNetwork
    environment:
      - MQ_HOST=${MQ_HOST}
      - MQ_PORT=${MQ_PORT}
      - MQ_EXCHANGE=${MQ_EXCHANGE}
      - MQ_LOG_QUEUE=${MQ_LOG_QUEUE}
      - MQ_LOG_ROUTING_KEY=${MQ_LOG_ROUTING_KEY}
      - MQ_MESSAGE_QUEUE=${MQ_MESSAGE_QUEUE}
      - MQ_MESSAGE_ROUTING_KEY=${MQ_MESSAGE_ROUTING_KEY}
      - MQ_STATE_QUEUE=${MQ_STATE_QUEUE}
      - MQ_STATE_SERVICE2_ROUTING_KEY=${MQ_STATE_SERVICE2_ROUTING_KEY}
    depends_on:
      - ${MQ_HOST}
    command:
      [
        "./src/utils/wait-for-it.sh",
        "${MQ_HOST}:${MQ_PORT}",
        "--",
        "npm",
        "start",
      ]

  rabbitmq:
    image: rabbitmq:3.12-management
    container_name: ${MQ_HOST}
    ports:
      - "15672:15672"
    expose:
      - ${MQ_PORT}
    networks:
      - customNetwork

  monitor:
    build: ./monitor
    container_name: ${MONITOR_HOST}
    ports:
      - "${MONITOR_PORT}:${MONITOR_PORT}"
    expose:
      - ${MONITOR_PORT}
    networks:
      - customNetwork
    environment:
      - MQ_HOST=${MQ_HOST}
      - MQ_PORT=${MQ_PORT}
      - MQ_LOG_QUEUE=${MQ_LOG_QUEUE}
      - MQ_EXCHANGE=${MQ_EXCHANGE}
      - MQ_LOG_ROUTING_KEY=${MQ_LOG_ROUTING_KEY}
      - MQ_STATE_QUEUE=${MQ_STATE_QUEUE}
      - MQ_STATE_MONITOR_ROUTING_KEY=${MQ_STATE_MONITOR_ROUTING_KEY}
    depends_on:
      - ${MQ_HOST}
    command:
      [
        "./src/utils/wait-for-it.sh",
        "${MQ_HOST}:${MQ_PORT}",
        "--",
        "npm",
        "start",
      ]

  api-gateway:
    build: ./api-gateway
    container_name: ${API_GATEWAY_HOST}
    ports:
      - "${API_GATEWAY_PORT}:${API_GATEWAY_PORT}"
    expose:
      - ${API_GATEWAY_PORT}
    networks:
      - customNetwork
    environment:
      - MQ_HOST=${MQ_HOST}
      - MQ_PORT=${MQ_PORT}
      - MQ_EXCHANGE=${MQ_EXCHANGE}
      - MQ_STATE_QUEUE=${MQ_STATE_QUEUE}
      - MQ_STATE_SERVICE1_ROUTING_KEY=${MQ_STATE_SERVICE1_ROUTING_KEY}
      - MQ_STATE_SERVICE2_ROUTING_KEY=${MQ_STATE_SERVICE2_ROUTING_KEY}
      - MQ_STATE_MONITOR_ROUTING_KEY=${MQ_STATE_MONITOR_ROUTING_KEY}
      - MONITOR_HOST=${MONITOR_HOST}
      - MONITOR_PORT=${MONITOR_PORT}
    depends_on:
      - ${MQ_HOST}
    command:
      [
        "./src/utils/wait-for-it.sh",
        "${SERVICE1_HOST}:${SERVICE1_PORT}",
        "--",
        "npm",
        "start",
      ]

networks:
  customNetwork:
